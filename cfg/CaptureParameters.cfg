#!/usr/bin/env python
PACKAGE = 'ensenso'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add('AutoBlackLevel',   bool_t,   level=0, default=True, 
          description="When set to true the image sensor black level will be adjusted automatically")
gen.add('AutoExposure',     bool_t,   level=0, default=True, 
          description="When set to true the Exposure will be adjusted after each Capture command involving this camera.")
gen.add('AutoGain',         bool_t,   level=0, default=True, 
          description="When set to true the Gain will be adjusted after each Capture command involving this camera.")
gen.add('Binning',          int_t,    level=0, default=1,     min=1,    max=2,
          description="A positive integer specifying the binning factor.")
gen.add('BlackLevelOffset', double_t, level=0, default=1.0,   min=0.0,  max=1.0,
          description="A number between 0.0 and 1.0. Values closer to zero will yield darker images, values closer to one will increase the image brightness at the expense of noise in dark image regions.")
gen.add('Exposure',         double_t, level=0, default=1.5,   min=0.01, max=20.0,
          description="Specifies the camera's exposure time in milliseconds.")
gen.add('FlexView',         bool_t,   level=0, default=False, 
          description="Enables the FlexView function.")
gen.add('FlexViewImages',   int_t,    level=0, default=2,     min=2,    max=8,
          description="A value in the range [2,8] specifying the number of image pairs used for depth computation.")
gen.add('FrontLight',       bool_t,   level=0, default=False, 
          description="When set to true the camera's front LED will be switched on for the duration of the image exposure.")
gen.add('Gain',             double_t, level=0, default=1.,    min=1,    max=4,
          description="A value in the range 1..MaxGain specifying the camera's analog gain factor")
gen.add('GainBoost',        bool_t,   level=0, default=False, 
          description="When set to true an additional analog gain boost on the camera will be enabled.")
gen.add('HardwareGamma',    bool_t,   level=0, default=True, 
          description="When set to true the cameras analog gamma correction will be enabled.")
gen.add('Hdr',              bool_t,   level=0, default=False, 
          description="When set to true the HDR function of the camera will be enabled.")
gen.add('PixelClock',       int_t,    level=0, default=24,    min=7,    max=43,
          description="An integer number specifying the cameras pixel clock in MHz. Range: [7-43]")
gen.add('Projector',        bool_t,   level=0, default=True, 
          description="When set to true the camera's pattern projector will be switched on for the duration of the image exposure.")
gen.add('TargetBrightness', int_t,    level=0, default=80,    min=40,   max=210,
          description="Positive number from 40 to 210, specifying the desired average gray value of both images.")
gen.add('DisparityMapAOI',  bool_t,   level=0, default=False, 
          description="When set to true the camera's capture AOI will be reduced.")
# Trigger mode enumerator
mode_enum = gen.enum([gen.const('Software',    int_t, 0, "The camera starts the exposure by software trigger when the Capture command is issued."),
                      gen.const('FallingEdge', int_t, 1, "The Capture command waits for a high-to-low transition on the trigger input before starting the exposure."),
                      gen.const('RisingEdge',  int_t, 2, "The Capture command waits for a low-to-high transition on the trigger input before starting the exposure.")],
                      "Specifies how an image capture is initiated.")
gen.add("TriggerMode",      int_t,    level=0, default=0,     min=0,    max=2, edit_method=mode_enum,
          description="Specifies how an image capture is initiated.")

exit(gen.generate(PACKAGE, 'ensenso', 'CaptureParameters'))


# The stereo maching volume is obtained from these parameters:
# Parameters > DisparityMap > Scaling

# Parameters > DisparityMap > StereoMatching > MinimumDisparity
# Range: [-256, 256]

# Parameters > DisparityMap > StereoMatching > NumberOfDisparities
# Range: [32, 256]
# Note: The NumberOfDisparities parameter must be a multiple of 16.
